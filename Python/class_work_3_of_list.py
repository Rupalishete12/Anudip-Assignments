# -*- coding: utf-8 -*-
"""Class work 3 of list.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hrg6H_Wf6PDlfY_HqqDRn23wCbvgnsIA

# 1. Write a Python program to sum all the elements in a list.
# Sample Input: [1, 2, 3, 4, 5]
# Expected Output: Sum = 15
"""

input_list = [1, 2, 3, 4, 5]
total_sum = sum(input_list)
print("Sum =", total_sum)

"""# 2. Write a Python program to find the largest element in a list.
# Sample Input: [10, 20, 4, 45, 99]
# Expected Output: Largest Element = 99
"""

input_list = [10, 20, 4, 45, 99]
largest_element = max(input_list)
print("Largest Element =", largest_element)

"""# 3. Write a Python program to count the number of elements in a list.
# Sample Input: [1, 2, 3, 4, 5]
# Expected Output: Count = 5
"""

input_list = [1, 2, 3, 4, 5]
count = len(input_list)
print("Count =", count)

"""4. Write a Python program to find the average of elements in a list.
# Sample Input: [1, 2, 3, 4, 5]
# Expected Output: Average = 3.0
"""

input_list = [1, 2, 3, 4, 5]
average = sum(input_list) / len(input_list) if input_list else 0
print("Average =", average)

"""5. Write a Python program to reverse a list.
# Sample Input: [1, 2, 3, 4, 5]
# Expected Output: Reversed List = [5, 4, 3, 2, 1]
"""

input_list = [1, 2, 3, 4, 5]
reversed_list = input_list[::-1]
print("Reversed List =", reversed_list)

"""# 6. Write a Python program to check if a given element exists in a list.
# Sample Input: List = [1, 2, 3, 4, 5], Element = 3
# Expected Output: Element exists in list.
"""

input_list = [1, 2, 3, 4, 5]
element = 3
if element in input_list:
    print("Element exists in list.")
else:
    print("Element does not exist in list.")

"""# 7. Write a Python program to remove duplicate elements from a list.
# Sample Input: [1, 2, 2, 3, 4, 4, 5]
# Expected Output: List without duplicates = [1, 2, 3, 4, 5]
"""

input_list = [1, 2, 2, 3, 4, 4, 5]
list_without_duplicates = list(set(input_list))
print("List without duplicates =", list_without_duplicates)

"""# 8. Write a Python program to find the second largest element in a list.
# Sample Input: [10, 20, 4, 45, 99]
# Expected Output: Second Largest Element = 45
"""

input_list = [10, 20, 4, 45, 99]
unique_elements = list(set(input_list))
unique_elements.sort()
if len(unique_elements) >= 2:
    second_largest = unique_elements[-2]
else:
    second_largest = None
print("Second Largest Element =", second_largest)

"""# 9. Write a Python program to sort elements in a list in ascending order.
# Sample Input: [5, 2, 9, 1, 5, 6]
# Expected Output: Sorted List = [1, 2, 5, 5, 6, 9]
"""

input_list = [5, 2, 9, 1, 5, 6]
sorted_list = sorted(input_list)
print("Sorted List =", sorted_list)

"""# 10. Write a Python program to merge two lists and sort them.
# Sample Input: List1 = [1, 5, 3], List2 = [8, 6, 2]
# Expected Output: Merged and Sorted List = [1, 2, 3, 5, 6, 8]
"""

list1 = [1, 5, 3]
list2 = [8, 6, 2]


merged_list = list1 + list2


merged_list.sort()

print("Merged and Sorted List =", merged_list)

"""Question: Given a nested list nested_list_row = [[1, 2, 3], [4, 5, 6], [7, 8, 9]], how can you access the number 9 from the list? Write a Python program to achieve this."""

nested_list_row = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
number_9 = nested_list_row[2][2]
print("Number 9 =", number_9)

"""Question: Suppose you have a nested list nested_list_column = [[1, 2, 3], [4, 5, 6], [7, 8, 9]], how can you access the number 8 from the list? Write a Python program to achieve this."""

nested_list_column = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
number_8 = nested_list_column[2][1]
print("Number 8 =", number_8)

"""How can you access the number 100 from the nested list nested_list_column = [[1, 2, 3], [4, 5, 6], [7, 8, 9,[1,55,77,100]]?"""

nested_list_column = [[1, 2, 3], [4, 5, 6], [7, 8, 9, [1, 55, 77, 100]]]
number_100 = nested_list_column[2][3][3]
print("Number 100 =", number_100)

"""Question: How can you access the number 100 from the nested list nested_list_column = [[1, 2, 3], [4, 5, 6], [7, 8, 9, [1,55,77,100]] using negative indexing?"""

nested_list_column = [[1, 2, 3], [4, 5, 6], [7, 8, 9, [1, 55, 77, 100]]]
number_100_negative_index = nested_list_column[-1][-1][-1]
print("Number 100 using negative indexing =", number_100_negative_index)